version: '3.9'

networks:
  dev_network:

services:
  app:
    build:
      context: ./articles
      dockerfile: Dockerfile.prod
    volumes:
      - static:/app/static_articles
      - media:/app/media
    env_file:
      - ${ENV}
    environment:
      - HOST_DB=postgre
      - WAIT_HOSTS=postgre:5432
      - DEBUG=False
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - db
    networks:
      dev_network:
        aliases:
          - app

  db:
    image: postgres:14.3-alpine3.15
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - 5431:5432
    restart: always
    env_file:
      - ${ENV}
    environment:
      - POSTGRES_DB=${NAME_DB}
      - POSTGRES_USER=${USER_DB}
      - POSTGRES_PASSWORD=${PASSWORD_DB}
    networks:
      dev_network:
        aliases:
          - postgre
  
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - app
    restart: always
    networks:
      dev_network:
        aliases:
          - nginx

  redis_db:
    image: redis:7-alpine
    restart: always
    env_file:
      - ${ENV}
    ports:
      - 6380:6379
    networks:
      dev_network:
        aliases:
          - redis

  celery:
    restart: always
    env_file:
      - ${ENV}
    environment:
      - WAIT_HOSTS=redis:6379
      - REDIS_URL=redis://redis:6379/1
    build:
      context: ./articles
      dockerfile: Dockerfile.celery
    volumes:
      - static:/app/static_project
      - media:/app/media
    depends_on:
      - redis_db
      - app
    networks:
      dev_network:
        aliases:
          - celery


volumes:
  static:
  media:
  postgres:
